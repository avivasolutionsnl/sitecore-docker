trigger:
- master

jobs:
- job: Build
  pool:
    vmImage: 'Windows-2019'
  # Use maximum timeout, ie. 6 hours 
  timeoutInMinutes: 0

  steps:
  - powershell: |
      $password = ConvertTo-SecureString -String $env:storageAccountKey -AsPlainText -Force;
      $credential = New-Object System.Management.Automation.PSCredential -ArgumentList "AZURE\$($env:storageAccountName)", $password;
      New-PSDrive -Name Z -PSProvider FileSystem -Root "$env:storageAccountLocation" -Credential $credential -Persist;
    env:
      storageAccountKey: $(storageAccountKey)
      storageAccountName: $(storageAccountName)
      storageAccountLocation: $(storageAccountLocation)
    displayName: 'Mount Files'

  - task: CopyFiles@2
    inputs:
      sourceFolder: Z:/ 
      targetFolder: Files
      cleanTargetFolder: true

  - task: CopyFiles@2
    displayName: 'Copy XC license'
    inputs:
      sourceFolder: Z:/
      targetFolder: xc/license/
      contents: license.xml
      cleanTargetFolder: true

  - task: CopyFiles@2
    displayName: 'Copy XP license'
    inputs:
      sourceFolder: Z:/
      targetFolder: xp/license/
      contents: license.xml
      cleanTargetFolder: true

  - powershell: | 
      If (Test-Path ./Files/*.pfx) { Write-Host "Re-using found certificates"; ls ./Files/*.pfx } Else { ./Generate-Certificates.ps1 }
    displayName: 'Generate certificates'

  - task: PowerShell@2
    displayName: 'Build images'
    inputs:
      targetType: 'filePath'
      filePath: build.ps1
      arguments: > 
          Xc
  
  - powershell: |
      $gitTag=(git describe --exact-match)
      If ($gitTag) { 
        $buildVersion=$gitTag.Substring($gitTag.IndexOf("-")+1);
        Write-Host "Pushing build Docker images to $(DockerRepoImagePrefix) with as build version $gitTag";
        build.ps1 PushXp --RepoImagePrefix $(DockerRepoImagePrefix) --BuildVersion $buildVersion;
        build.ps1 PushXc --RepoImagePrefix $(DockerRepoImagePrefix) --BuildVersion $buildVersion
      } Else { 
        Write-Host "Not pushing Docker images as there is no Git tag, i.e. Github release associated on the current commit" 
      }
    displayName: '(Optionally) Push images'
